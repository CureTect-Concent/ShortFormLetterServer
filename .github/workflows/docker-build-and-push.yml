name: Pull and Run Container

on:
  push:
    branches:
      - action

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up environment variables
        run: |
          echo "DATABASE_URL=${{ secrets.CONCENT_DB_URL }}" >> $GITHUB_ENV
          echo "DRIVER_CLASS=${{ secrets.DRIVER_CLASS }}" >> $GITHUB_ENV
          echo "CONCENT_USERNAME=${{ secrets.CONCENT_USERNAME }}" >> $GITHUB_ENV
          echo "CONCENT_PASSWORD=${{ secrets.CONCENT_PASSWORD }}" >> $GITHUB_ENV
          echo "AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }}" >> $GITHUB_ENV
          echo "AWS_SECRETS_KEY=${{ secrets.AWS_SECRETS_KEY }}" >> $GITHUB_ENV
          echo "S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}" >> $GITHUB_ENV
          echo "AWS_S3_REGION=${{ secrets.AWS_S3_REGION }}" >> $GITHUB_ENV
          echo "PORT=${{ secrets.PORT }}" >> $GITHUB_ENV
          echo "S3_BASE_URL=${{ secrets.S3_BASE_URL }}" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_DIALECT=org.hibernate.dialect.MySQL8Dialect" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_DDL_AUTO=update" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_FORMAT_SQL=true" >> $GITHUB_ENV
          echo "SPRING_JPA_HIBERNATE_SHOW_SQL=true" >> $GITHUB_ENV
          echo "CLOUD.AWS.STACK.AUTO=false" >> $GITHUB_ENV
          echo "SPRING.SERVLET.MULTIPART.MAX-FILE-SIZE=100MB" >> $GITHUB_ENV
          echo "SPRING.SERVLET.MULTIPART.MAX-REQUEST-SIZE=100MB" >> $GITHUB_ENV
          echo "LOGGING.LEVEL.COM.AMAZONAWS.UTIL.EC2METADATAUTILS=error" >> $GITHUB_ENV

      - name: Build and push
        run:
          ./gradlew build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: concent/sfl:1.22
          platforms: linux/amd64,linux/arm64,linux/arm/v7